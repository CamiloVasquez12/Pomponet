// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomponet.Context;

#nullable disable

namespace Pomponet.Migrations
{
    [DbContext(typeof(CropsDbContext))]
    [Migration("20240418200113_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pomponet.Model.Crops", b =>
                {
                    b.Property<int>("Id_Crop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Crop"));

                    b.Property<int>("Crop_Number")
                        .HasColumnType("int");

                    b.Property<int?>("FungicidesId_Fungicide")
                        .HasColumnType("int");

                    b.Property<int>("Id_Fungicide")
                        .HasColumnType("int");

                    b.Property<int>("Id_Player")
                        .HasColumnType("int");

                    b.Property<int>("Id_Sensor")
                        .HasColumnType("int");

                    b.Property<int?>("PlayersId_Player")
                        .HasColumnType("int");

                    b.Property<int?>("SensorsId_Sensor")
                        .HasColumnType("int");

                    b.HasKey("Id_Crop");

                    b.HasIndex("FungicidesId_Fungicide");

                    b.HasIndex("PlayersId_Player");

                    b.HasIndex("SensorsId_Sensor");

                    b.ToTable("Crop");
                });

            modelBuilder.Entity("Pomponet.Model.Fungicides", b =>
                {
                    b.Property<int>("Id_Fungicide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Fungicide"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_TypeFungicide")
                        .HasColumnType("int");

                    b.Property<string>("Name_Fungicide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Types_FungicidesId_Type_Fungicide")
                        .HasColumnType("int");

                    b.HasKey("Id_Fungicide");

                    b.HasIndex("Types_FungicidesId_Type_Fungicide");

                    b.ToTable("Fungicides");
                });

            modelBuilder.Entity("Pomponet.Model.People", b =>
                {
                    b.Property<int>("Id_Person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Person"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Person");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Pomponet.Model.Players", b =>
                {
                    b.Property<int>("Id_Player")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Player"));

                    b.Property<int>("Id_Person")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeopleId_Person")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Player");

                    b.HasIndex("PeopleId_Person");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Pomponet.Model.Sensors", b =>
                {
                    b.Property<int>("Id_Sensor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Sensor"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Sensor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Sensor");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("Pomponet.Model.Types_Fungicides", b =>
                {
                    b.Property<int>("Id_Type_Fungicide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Type_Fungicide"));

                    b.Property<string>("Type_Fungicide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Type_Fungicide");

                    b.ToTable("Types_Fungicides");
                });

            modelBuilder.Entity("Pomponet.Model.Crops", b =>
                {
                    b.HasOne("Pomponet.Model.Fungicides", "Fungicides")
                        .WithMany()
                        .HasForeignKey("FungicidesId_Fungicide");

                    b.HasOne("Pomponet.Model.Players", "Players")
                        .WithMany()
                        .HasForeignKey("PlayersId_Player");

                    b.HasOne("Pomponet.Model.Sensors", "Sensors")
                        .WithMany()
                        .HasForeignKey("SensorsId_Sensor");

                    b.Navigation("Fungicides");

                    b.Navigation("Players");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("Pomponet.Model.Fungicides", b =>
                {
                    b.HasOne("Pomponet.Model.Types_Fungicides", "Types_Fungicides")
                        .WithMany()
                        .HasForeignKey("Types_FungicidesId_Type_Fungicide");

                    b.Navigation("Types_Fungicides");
                });

            modelBuilder.Entity("Pomponet.Model.Players", b =>
                {
                    b.HasOne("Pomponet.Model.People", "People")
                        .WithMany()
                        .HasForeignKey("PeopleId_Person");

                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
